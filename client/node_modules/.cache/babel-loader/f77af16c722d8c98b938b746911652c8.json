{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Portal from '@rc-component/portal';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport DrawerPopup from './DrawerPopup';\nimport { warnCheck } from './util';\n\nvar Drawer = function Drawer(props) {\n  var _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-drawer' : _props$prefixCls,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'right' : _props$placement,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n      _props$keyboard = props.keyboard,\n      keyboard = _props$keyboard === void 0 ? true : _props$keyboard,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 378 : _props$width,\n      _props$mask = props.mask,\n      mask = _props$mask === void 0 ? true : _props$mask,\n      _props$maskClosable = props.maskClosable,\n      maskClosable = _props$maskClosable === void 0 ? true : _props$maskClosable,\n      getContainer = props.getContainer,\n      forceRender = props.forceRender,\n      afterOpenChange = props.afterOpenChange,\n      destroyOnClose = props.destroyOnClose,\n      onMouseEnter = props.onMouseEnter,\n      onMouseOver = props.onMouseOver,\n      onMouseLeave = props.onMouseLeave,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      animatedVisible = _React$useState2[0],\n      setAnimatedVisible = _React$useState2[1]; // ============================= Warn =============================\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnCheck(props);\n  } // ============================= Open =============================\n\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      mounted = _React$useState4[0],\n      setMounted = _React$useState4[1];\n\n  useLayoutEffect(function () {\n    setMounted(true);\n  }, []);\n  var mergedOpen = mounted ? open : false; // ============================ Focus =============================\n\n  var panelRef = React.useRef();\n  var lastActiveRef = React.useRef();\n  useLayoutEffect(function () {\n    if (mergedOpen) {\n      lastActiveRef.current = document.activeElement;\n    }\n  }, [mergedOpen]); // ============================= Open =============================\n\n  var internalAfterOpenChange = function internalAfterOpenChange(nextVisible) {\n    var _panelRef$current;\n\n    setAnimatedVisible(nextVisible);\n    afterOpenChange === null || afterOpenChange === void 0 ? void 0 : afterOpenChange(nextVisible);\n\n    if (!nextVisible && lastActiveRef.current && !((_panelRef$current = panelRef.current) === null || _panelRef$current === void 0 ? void 0 : _panelRef$current.contains(lastActiveRef.current))) {\n      var _lastActiveRef$curren;\n\n      (_lastActiveRef$curren = lastActiveRef.current) === null || _lastActiveRef$curren === void 0 ? void 0 : _lastActiveRef$curren.focus({\n        preventScroll: true\n      });\n    }\n  }; // ============================ Render ============================\n\n\n  if (!forceRender && !animatedVisible && !mergedOpen && destroyOnClose) {\n    return null;\n  }\n\n  var eventHandlers = {\n    onMouseEnter: onMouseEnter,\n    onMouseOver: onMouseOver,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  };\n\n  var drawerPopupProps = _objectSpread(_objectSpread({}, props), {}, {\n    open: mergedOpen,\n    prefixCls: prefixCls,\n    placement: placement,\n    autoFocus: autoFocus,\n    keyboard: keyboard,\n    width: width,\n    mask: mask,\n    maskClosable: maskClosable,\n    inline: getContainer === false,\n    afterOpenChange: internalAfterOpenChange,\n    ref: panelRef\n  }, eventHandlers);\n\n  return /*#__PURE__*/React.createElement(Portal, {\n    open: mergedOpen || forceRender || animatedVisible,\n    autoDestroy: false,\n    getContainer: getContainer,\n    autoLock: mask && (mergedOpen || animatedVisible)\n  }, /*#__PURE__*/React.createElement(DrawerPopup, drawerPopupProps));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Drawer.displayName = 'Drawer';\n}\n\nexport default Drawer;","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-drawer/es/Drawer.js"],"names":["_objectSpread","_slicedToArray","React","Portal","useLayoutEffect","DrawerPopup","warnCheck","Drawer","props","_props$open","open","_props$prefixCls","prefixCls","_props$placement","placement","_props$autoFocus","autoFocus","_props$keyboard","keyboard","_props$width","width","_props$mask","mask","_props$maskClosable","maskClosable","getContainer","forceRender","afterOpenChange","destroyOnClose","onMouseEnter","onMouseOver","onMouseLeave","onClick","onKeyDown","onKeyUp","_React$useState","useState","_React$useState2","animatedVisible","setAnimatedVisible","process","env","NODE_ENV","_React$useState3","_React$useState4","mounted","setMounted","mergedOpen","panelRef","useRef","lastActiveRef","current","document","activeElement","internalAfterOpenChange","nextVisible","_panelRef$current","contains","_lastActiveRef$curren","focus","preventScroll","eventHandlers","drawerPopupProps","inline","ref","createElement","autoDestroy","autoLock","displayName"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Portal from '@rc-component/portal';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport DrawerPopup from './DrawerPopup';\nimport { warnCheck } from './util';\nvar Drawer = function Drawer(props) {\n  var _props$open = props.open,\n    open = _props$open === void 0 ? false : _props$open,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-drawer' : _props$prefixCls,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'right' : _props$placement,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    _props$keyboard = props.keyboard,\n    keyboard = _props$keyboard === void 0 ? true : _props$keyboard,\n    _props$width = props.width,\n    width = _props$width === void 0 ? 378 : _props$width,\n    _props$mask = props.mask,\n    mask = _props$mask === void 0 ? true : _props$mask,\n    _props$maskClosable = props.maskClosable,\n    maskClosable = _props$maskClosable === void 0 ? true : _props$maskClosable,\n    getContainer = props.getContainer,\n    forceRender = props.forceRender,\n    afterOpenChange = props.afterOpenChange,\n    destroyOnClose = props.destroyOnClose,\n    onMouseEnter = props.onMouseEnter,\n    onMouseOver = props.onMouseOver,\n    onMouseLeave = props.onMouseLeave,\n    onClick = props.onClick,\n    onKeyDown = props.onKeyDown,\n    onKeyUp = props.onKeyUp;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    animatedVisible = _React$useState2[0],\n    setAnimatedVisible = _React$useState2[1];\n  // ============================= Warn =============================\n  if (process.env.NODE_ENV !== 'production') {\n    warnCheck(props);\n  }\n  // ============================= Open =============================\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    mounted = _React$useState4[0],\n    setMounted = _React$useState4[1];\n  useLayoutEffect(function () {\n    setMounted(true);\n  }, []);\n  var mergedOpen = mounted ? open : false;\n  // ============================ Focus =============================\n  var panelRef = React.useRef();\n  var lastActiveRef = React.useRef();\n  useLayoutEffect(function () {\n    if (mergedOpen) {\n      lastActiveRef.current = document.activeElement;\n    }\n  }, [mergedOpen]);\n  // ============================= Open =============================\n  var internalAfterOpenChange = function internalAfterOpenChange(nextVisible) {\n    var _panelRef$current;\n    setAnimatedVisible(nextVisible);\n    afterOpenChange === null || afterOpenChange === void 0 ? void 0 : afterOpenChange(nextVisible);\n    if (!nextVisible && lastActiveRef.current && !((_panelRef$current = panelRef.current) === null || _panelRef$current === void 0 ? void 0 : _panelRef$current.contains(lastActiveRef.current))) {\n      var _lastActiveRef$curren;\n      (_lastActiveRef$curren = lastActiveRef.current) === null || _lastActiveRef$curren === void 0 ? void 0 : _lastActiveRef$curren.focus({\n        preventScroll: true\n      });\n    }\n  };\n  // ============================ Render ============================\n  if (!forceRender && !animatedVisible && !mergedOpen && destroyOnClose) {\n    return null;\n  }\n  var eventHandlers = {\n    onMouseEnter: onMouseEnter,\n    onMouseOver: onMouseOver,\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp\n  };\n  var drawerPopupProps = _objectSpread(_objectSpread({}, props), {}, {\n    open: mergedOpen,\n    prefixCls: prefixCls,\n    placement: placement,\n    autoFocus: autoFocus,\n    keyboard: keyboard,\n    width: width,\n    mask: mask,\n    maskClosable: maskClosable,\n    inline: getContainer === false,\n    afterOpenChange: internalAfterOpenChange,\n    ref: panelRef\n  }, eventHandlers);\n  return /*#__PURE__*/React.createElement(Portal, {\n    open: mergedOpen || forceRender || animatedVisible,\n    autoDestroy: false,\n    getContainer: getContainer,\n    autoLock: mask && (mergedOpen || animatedVisible)\n  }, /*#__PURE__*/React.createElement(DrawerPopup, drawerPopupProps));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Drawer.displayName = 'Drawer';\n}\nexport default Drawer;"]},"metadata":{},"sourceType":"module"}