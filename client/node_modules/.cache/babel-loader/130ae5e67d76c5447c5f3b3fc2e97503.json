{"ast":null,"code":"import * as React from 'react';\nimport canUseDom from \"../Dom/canUseDom\";\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\n\nvar useInternalLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\n\nvar useLayoutEffect = function useLayoutEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useInternalLayoutEffect(function () {\n    return callback(firstMountRef.current);\n  }, deps); // We tell react that first mount has passed\n\n  useInternalLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\n\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  useLayoutEffect(function (firstMount) {\n    if (!firstMount) {\n      return callback();\n    }\n  }, deps);\n};\nexport default useLayoutEffect;","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-util/es/hooks/useLayoutEffect.js"],"names":["React","canUseDom","useInternalLayoutEffect","process","env","NODE_ENV","useLayoutEffect","useEffect","callback","deps","firstMountRef","useRef","current","useLayoutUpdateEffect","firstMount"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA;AACA;AACA;;AACA,IAAIC,uBAAuB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCJ,SAAS,EAA5C,GAAiDD,KAAK,CAACM,eAAvD,GAAyEN,KAAK,CAACO,SAA7G;;AACA,IAAID,eAAe,GAAG,SAASA,eAAT,CAAyBE,QAAzB,EAAmCC,IAAnC,EAAyC;AAC7D,MAAIC,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAApB;AACAT,EAAAA,uBAAuB,CAAC,YAAY;AAClC,WAAOM,QAAQ,CAACE,aAAa,CAACE,OAAf,CAAf;AACD,GAFsB,EAEpBH,IAFoB,CAAvB,CAF6D,CAM7D;;AACAP,EAAAA,uBAAuB,CAAC,YAAY;AAClCQ,IAAAA,aAAa,CAACE,OAAd,GAAwB,KAAxB;AACA,WAAO,YAAY;AACjBF,MAAAA,aAAa,CAACE,OAAd,GAAwB,IAAxB;AACD,KAFD;AAGD,GALsB,EAKpB,EALoB,CAAvB;AAMD,CAbD;;AAcA,OAAO,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BL,QAA/B,EAAyCC,IAAzC,EAA+C;AAChFH,EAAAA,eAAe,CAAC,UAAUQ,UAAV,EAAsB;AACpC,QAAI,CAACA,UAAL,EAAiB;AACf,aAAON,QAAQ,EAAf;AACD;AACF,GAJc,EAIZC,IAJY,CAAf;AAKD,CANM;AAOP,eAAeH,eAAf","sourcesContent":["import * as React from 'react';\nimport canUseDom from \"../Dom/canUseDom\";\n\n/**\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\n */\nvar useInternalLayoutEffect = process.env.NODE_ENV !== 'test' && canUseDom() ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = function useLayoutEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useInternalLayoutEffect(function () {\n    return callback(firstMountRef.current);\n  }, deps);\n\n  // We tell react that first mount has passed\n  useInternalLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\nexport var useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  useLayoutEffect(function (firstMount) {\n    if (!firstMount) {\n      return callback();\n    }\n  }, deps);\n};\nexport default useLayoutEffect;"]},"metadata":{},"sourceType":"module"}