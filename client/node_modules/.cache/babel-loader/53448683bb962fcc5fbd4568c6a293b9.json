{"ast":null,"code":"import * as React from 'react';\nimport { Item } from '../Item';\nexport default function useChildren(list, startIndex, endIndex, scrollWidth, setNodeRef, renderFunc, _ref) {\n  var getKey = _ref.getKey;\n  return list.slice(startIndex, endIndex + 1).map(function (item, index) {\n    var eleIndex = startIndex + index;\n    var node = renderFunc(item, eleIndex, {\n      style: {\n        width: scrollWidth\n      }\n    });\n    var key = getKey(item);\n    return /*#__PURE__*/React.createElement(Item, {\n      key: key,\n      setRef: function setRef(ele) {\n        return setNodeRef(item, ele);\n      }\n    }, node);\n  });\n}","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-virtual-list/es/hooks/useChildren.js"],"names":["React","Item","useChildren","list","startIndex","endIndex","scrollWidth","setNodeRef","renderFunc","_ref","getKey","slice","map","item","index","eleIndex","node","style","width","key","createElement","setRef","ele"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,WAAjD,EAA8DC,UAA9D,EAA0EC,UAA1E,EAAsFC,IAAtF,EAA4F;AACzG,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,SAAOP,IAAI,CAACQ,KAAL,CAAWP,UAAX,EAAuBC,QAAQ,GAAG,CAAlC,EAAqCO,GAArC,CAAyC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACrE,QAAIC,QAAQ,GAAGX,UAAU,GAAGU,KAA5B;AACA,QAAIE,IAAI,GAAGR,UAAU,CAACK,IAAD,EAAOE,QAAP,EAAiB;AACpCE,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAEZ;AADF;AAD6B,KAAjB,CAArB;AAKA,QAAIa,GAAG,GAAGT,MAAM,CAACG,IAAD,CAAhB;AACA,WAAO,aAAab,KAAK,CAACoB,aAAN,CAAoBnB,IAApB,EAA0B;AAC5CkB,MAAAA,GAAG,EAAEA,GADuC;AAE5CE,MAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAC3B,eAAOf,UAAU,CAACM,IAAD,EAAOS,GAAP,CAAjB;AACD;AAJ2C,KAA1B,EAKjBN,IALiB,CAApB;AAMD,GAdM,CAAP;AAeD","sourcesContent":["import * as React from 'react';\nimport { Item } from '../Item';\nexport default function useChildren(list, startIndex, endIndex, scrollWidth, setNodeRef, renderFunc, _ref) {\n  var getKey = _ref.getKey;\n  return list.slice(startIndex, endIndex + 1).map(function (item, index) {\n    var eleIndex = startIndex + index;\n    var node = renderFunc(item, eleIndex, {\n      style: {\n        width: scrollWidth\n      }\n    });\n    var key = getKey(item);\n    return /*#__PURE__*/React.createElement(Item, {\n      key: key,\n      setRef: function setRef(ele) {\n        return setNodeRef(item, ele);\n      }\n    }, node);\n  });\n}"]},"metadata":{},"sourceType":"module"}