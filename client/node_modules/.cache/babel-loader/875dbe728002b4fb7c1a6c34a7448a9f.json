{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport useTimeSelection from '../../hooks/useTimeSelection';\nimport { leftPad } from '../../utils/miscUtil';\nimport TimeUnitColumn from './TimeUnitColumn';\n\nfunction shouldUnitsUpdate(prevUnits, nextUnits) {\n  if (prevUnits.length !== nextUnits.length) return true; // if any unit's disabled status is different, the units should be re-evaluted\n\n  for (var i = 0; i < prevUnits.length; i += 1) {\n    if (prevUnits[i].disabled !== nextUnits[i].disabled) return true;\n  }\n\n  return false;\n}\n\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n  var integerStep = step >= 1 ? step | 0 : 1;\n\n  for (var i = start; i <= end; i += integerStep) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n\n  return units;\n}\n\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n      prefixCls = props.prefixCls,\n      operationRef = props.operationRef,\n      activeColumnIndex = props.activeColumnIndex,\n      value = props.value,\n      showHour = props.showHour,\n      showMinute = props.showMinute,\n      showSecond = props.showSecond,\n      use12Hours = props.use12Hours,\n      _props$hourStep = props.hourStep,\n      hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n      _props$minuteStep = props.minuteStep,\n      minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n      _props$secondStep = props.secondStep,\n      secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n      disabledHours = props.disabledHours,\n      disabledMinutes = props.disabledMinutes,\n      disabledSeconds = props.disabledSeconds,\n      disabledTime = props.disabledTime,\n      hideDisabledOptions = props.hideDisabledOptions,\n      onSelect = props.onSelect; // Misc\n\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var originHour = value ? generateConfig.getHour(value) : -1;\n  var hour = originHour;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1; // Disabled Time\n\n  var now = generateConfig.getNow();\n\n  var _React$useMemo = React.useMemo(function () {\n    if (disabledTime) {\n      var disabledConfig = disabledTime(now);\n      return [disabledConfig.disabledHours, disabledConfig.disabledMinutes, disabledConfig.disabledSeconds];\n    }\n\n    return [disabledHours, disabledMinutes, disabledSeconds];\n  }, [disabledHours, disabledMinutes, disabledSeconds, disabledTime, now]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 3),\n      mergedDisabledHours = _React$useMemo2[0],\n      mergedDisabledMinutes = _React$useMemo2[1],\n      mergedDisabledSeconds = _React$useMemo2[2]; // ========================= Unit =========================\n\n\n  var rawHours = generateUnits(0, 23, hourStep, mergedDisabledHours && mergedDisabledHours());\n  var memorizedRawHours = useMemo(function () {\n    return rawHours;\n  }, rawHours, shouldUnitsUpdate); // Should additional logic to handle 12 hours\n\n  if (use12Hours) {\n    isPM = hour >= 12; // -1 means should display AM\n\n    hour %= 12;\n  }\n\n  var _React$useMemo3 = React.useMemo(function () {\n    if (!use12Hours) {\n      return [false, false];\n    }\n\n    var AMPMDisabled = [true, true];\n    memorizedRawHours.forEach(function (_ref) {\n      var disabled = _ref.disabled,\n          hourValue = _ref.value;\n      if (disabled) return;\n\n      if (hourValue >= 12) {\n        AMPMDisabled[1] = false;\n      } else {\n        AMPMDisabled[0] = false;\n      }\n    });\n    return AMPMDisabled;\n  }, [use12Hours, memorizedRawHours]),\n      _React$useMemo4 = _slicedToArray(_React$useMemo3, 2),\n      AMDisabled = _React$useMemo4[0],\n      PMDisabled = _React$useMemo4[1];\n\n  var hours = React.useMemo(function () {\n    if (!use12Hours) return memorizedRawHours;\n    return memorizedRawHours.filter(isPM ? function (hourMeta) {\n      return hourMeta.value >= 12;\n    } : function (hourMeta) {\n      return hourMeta.value < 12;\n    }).map(function (hourMeta) {\n      var hourValue = hourMeta.value % 12;\n      var hourLabel = hourValue === 0 ? '12' : leftPad(hourValue, 2);\n      return _objectSpread(_objectSpread({}, hourMeta), {}, {\n        label: hourLabel,\n        value: hourValue\n      });\n    });\n  }, [use12Hours, isPM, memorizedRawHours]);\n  var minutes = generateUnits(0, 59, minuteStep, mergedDisabledMinutes && mergedDisabledMinutes(originHour));\n  var seconds = generateUnits(0, 59, secondStep, mergedDisabledSeconds && mergedDisabledSeconds(originHour, minute)); // Set Time\n\n  var setTime = useTimeSelection({\n    value: value,\n    generateConfig: generateConfig,\n    disabledMinutes: mergedDisabledMinutes,\n    disabledSeconds: mergedDisabledSeconds,\n    minutes: minutes,\n    seconds: seconds,\n    use12Hours: use12Hours\n  }); // ====================== Operations ======================\n\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  }; // ======================== Render ========================\n\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: /*#__PURE__*/React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  } // Hour\n\n\n  addColumnNode(showHour, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  }); // Minute\n\n  addColumnNode(showMinute, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  }); // Second\n\n  addColumnNode(showSecond, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  }); // 12 Hours\n\n  var PMIndex = -1;\n\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n\n  addColumnNode(use12Hours === true, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0,\n    disabled: AMDisabled\n  }, {\n    label: 'PM',\n    value: 1,\n    disabled: PMDisabled\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  }));\n}\n\nexport default TimeBody;","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-picker/es/panels/TimePanel/TimeBody.js"],"names":["_objectSpread","_slicedToArray","useMemo","React","useTimeSelection","leftPad","TimeUnitColumn","shouldUnitsUpdate","prevUnits","nextUnits","length","i","disabled","generateUnits","start","end","step","disabledUnits","units","integerStep","push","label","value","includes","TimeBody","props","generateConfig","prefixCls","operationRef","activeColumnIndex","showHour","showMinute","showSecond","use12Hours","_props$hourStep","hourStep","_props$minuteStep","minuteStep","_props$secondStep","secondStep","disabledHours","disabledMinutes","disabledSeconds","disabledTime","hideDisabledOptions","onSelect","columns","contentPrefixCls","concat","columnPrefixCls","isPM","originHour","getHour","hour","minute","getMinute","second","getSecond","now","getNow","_React$useMemo","disabledConfig","_React$useMemo2","mergedDisabledHours","mergedDisabledMinutes","mergedDisabledSeconds","rawHours","memorizedRawHours","_React$useMemo3","AMPMDisabled","forEach","_ref","hourValue","_React$useMemo4","AMDisabled","PMDisabled","hours","filter","hourMeta","map","hourLabel","minutes","seconds","setTime","current","onUpDown","diff","column","valueIndex","findIndex","unit","unitLen","nextUnit","addColumnNode","condition","node","columnValue","onColumnSelect","cloneElement","active","createElement","key","num","PMIndex","className","_ref2"],"mappings":"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","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport * as React from 'react';\nimport useTimeSelection from '../../hooks/useTimeSelection';\nimport { leftPad } from '../../utils/miscUtil';\nimport TimeUnitColumn from './TimeUnitColumn';\nfunction shouldUnitsUpdate(prevUnits, nextUnits) {\n  if (prevUnits.length !== nextUnits.length) return true;\n  // if any unit's disabled status is different, the units should be re-evaluted\n  for (var i = 0; i < prevUnits.length; i += 1) {\n    if (prevUnits[i].disabled !== nextUnits[i].disabled) return true;\n  }\n  return false;\n}\nfunction generateUnits(start, end, step, disabledUnits) {\n  var units = [];\n  var integerStep = step >= 1 ? step | 0 : 1;\n  for (var i = start; i <= end; i += integerStep) {\n    units.push({\n      label: leftPad(i, 2),\n      value: i,\n      disabled: (disabledUnits || []).includes(i)\n    });\n  }\n  return units;\n}\nfunction TimeBody(props) {\n  var generateConfig = props.generateConfig,\n    prefixCls = props.prefixCls,\n    operationRef = props.operationRef,\n    activeColumnIndex = props.activeColumnIndex,\n    value = props.value,\n    showHour = props.showHour,\n    showMinute = props.showMinute,\n    showSecond = props.showSecond,\n    use12Hours = props.use12Hours,\n    _props$hourStep = props.hourStep,\n    hourStep = _props$hourStep === void 0 ? 1 : _props$hourStep,\n    _props$minuteStep = props.minuteStep,\n    minuteStep = _props$minuteStep === void 0 ? 1 : _props$minuteStep,\n    _props$secondStep = props.secondStep,\n    secondStep = _props$secondStep === void 0 ? 1 : _props$secondStep,\n    disabledHours = props.disabledHours,\n    disabledMinutes = props.disabledMinutes,\n    disabledSeconds = props.disabledSeconds,\n    disabledTime = props.disabledTime,\n    hideDisabledOptions = props.hideDisabledOptions,\n    onSelect = props.onSelect;\n  // Misc\n  var columns = [];\n  var contentPrefixCls = \"\".concat(prefixCls, \"-content\");\n  var columnPrefixCls = \"\".concat(prefixCls, \"-time-panel\");\n  var isPM;\n  var originHour = value ? generateConfig.getHour(value) : -1;\n  var hour = originHour;\n  var minute = value ? generateConfig.getMinute(value) : -1;\n  var second = value ? generateConfig.getSecond(value) : -1;\n  // Disabled Time\n  var now = generateConfig.getNow();\n  var _React$useMemo = React.useMemo(function () {\n      if (disabledTime) {\n        var disabledConfig = disabledTime(now);\n        return [disabledConfig.disabledHours, disabledConfig.disabledMinutes, disabledConfig.disabledSeconds];\n      }\n      return [disabledHours, disabledMinutes, disabledSeconds];\n    }, [disabledHours, disabledMinutes, disabledSeconds, disabledTime, now]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 3),\n    mergedDisabledHours = _React$useMemo2[0],\n    mergedDisabledMinutes = _React$useMemo2[1],\n    mergedDisabledSeconds = _React$useMemo2[2];\n  // ========================= Unit =========================\n  var rawHours = generateUnits(0, 23, hourStep, mergedDisabledHours && mergedDisabledHours());\n  var memorizedRawHours = useMemo(function () {\n    return rawHours;\n  }, rawHours, shouldUnitsUpdate);\n  // Should additional logic to handle 12 hours\n  if (use12Hours) {\n    isPM = hour >= 12; // -1 means should display AM\n    hour %= 12;\n  }\n  var _React$useMemo3 = React.useMemo(function () {\n      if (!use12Hours) {\n        return [false, false];\n      }\n      var AMPMDisabled = [true, true];\n      memorizedRawHours.forEach(function (_ref) {\n        var disabled = _ref.disabled,\n          hourValue = _ref.value;\n        if (disabled) return;\n        if (hourValue >= 12) {\n          AMPMDisabled[1] = false;\n        } else {\n          AMPMDisabled[0] = false;\n        }\n      });\n      return AMPMDisabled;\n    }, [use12Hours, memorizedRawHours]),\n    _React$useMemo4 = _slicedToArray(_React$useMemo3, 2),\n    AMDisabled = _React$useMemo4[0],\n    PMDisabled = _React$useMemo4[1];\n  var hours = React.useMemo(function () {\n    if (!use12Hours) return memorizedRawHours;\n    return memorizedRawHours.filter(isPM ? function (hourMeta) {\n      return hourMeta.value >= 12;\n    } : function (hourMeta) {\n      return hourMeta.value < 12;\n    }).map(function (hourMeta) {\n      var hourValue = hourMeta.value % 12;\n      var hourLabel = hourValue === 0 ? '12' : leftPad(hourValue, 2);\n      return _objectSpread(_objectSpread({}, hourMeta), {}, {\n        label: hourLabel,\n        value: hourValue\n      });\n    });\n  }, [use12Hours, isPM, memorizedRawHours]);\n  var minutes = generateUnits(0, 59, minuteStep, mergedDisabledMinutes && mergedDisabledMinutes(originHour));\n  var seconds = generateUnits(0, 59, secondStep, mergedDisabledSeconds && mergedDisabledSeconds(originHour, minute));\n  // Set Time\n  var setTime = useTimeSelection({\n    value: value,\n    generateConfig: generateConfig,\n    disabledMinutes: mergedDisabledMinutes,\n    disabledSeconds: mergedDisabledSeconds,\n    minutes: minutes,\n    seconds: seconds,\n    use12Hours: use12Hours\n  });\n  // ====================== Operations ======================\n  operationRef.current = {\n    onUpDown: function onUpDown(diff) {\n      var column = columns[activeColumnIndex];\n      if (column) {\n        var valueIndex = column.units.findIndex(function (unit) {\n          return unit.value === column.value;\n        });\n        var unitLen = column.units.length;\n        for (var i = 1; i < unitLen; i += 1) {\n          var nextUnit = column.units[(valueIndex + diff * i + unitLen) % unitLen];\n          if (nextUnit.disabled !== true) {\n            column.onSelect(nextUnit.value);\n            break;\n          }\n        }\n      }\n    }\n  };\n  // ======================== Render ========================\n  function addColumnNode(condition, node, columnValue, units, onColumnSelect) {\n    if (condition !== false) {\n      columns.push({\n        node: /*#__PURE__*/React.cloneElement(node, {\n          prefixCls: columnPrefixCls,\n          value: columnValue,\n          active: activeColumnIndex === columns.length,\n          onSelect: onColumnSelect,\n          units: units,\n          hideDisabledOptions: hideDisabledOptions\n        }),\n        onSelect: onColumnSelect,\n        value: columnValue,\n        units: units\n      });\n    }\n  }\n  // Hour\n  addColumnNode(showHour, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"hour\"\n  }), hour, hours, function (num) {\n    onSelect(setTime(isPM, num, minute, second), 'mouse');\n  });\n  // Minute\n  addColumnNode(showMinute, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"minute\"\n  }), minute, minutes, function (num) {\n    onSelect(setTime(isPM, hour, num, second), 'mouse');\n  });\n  // Second\n  addColumnNode(showSecond, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"second\"\n  }), second, seconds, function (num) {\n    onSelect(setTime(isPM, hour, minute, num), 'mouse');\n  });\n  // 12 Hours\n  var PMIndex = -1;\n  if (typeof isPM === 'boolean') {\n    PMIndex = isPM ? 1 : 0;\n  }\n  addColumnNode(use12Hours === true, /*#__PURE__*/React.createElement(TimeUnitColumn, {\n    key: \"12hours\"\n  }), PMIndex, [{\n    label: 'AM',\n    value: 0,\n    disabled: AMDisabled\n  }, {\n    label: 'PM',\n    value: 1,\n    disabled: PMDisabled\n  }], function (num) {\n    onSelect(setTime(!!num, hour, minute, second), 'mouse');\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: contentPrefixCls\n  }, columns.map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  }));\n}\nexport default TimeBody;"]},"metadata":{},"sourceType":"module"}