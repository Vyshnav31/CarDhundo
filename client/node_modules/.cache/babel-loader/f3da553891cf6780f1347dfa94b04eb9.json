{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport RCNotification from 'rc-notification';\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig } from '../config-provider';\nimport createUseMessage from './hooks/useMessage';\nvar messageInstance;\nvar defaultDuration = 3;\nvar defaultTop;\nvar key = 1;\nvar localPrefixCls = '';\nvar transitionName = 'move-up';\nvar hasTransitionName = false;\nvar getContainer;\nvar maxCount;\nvar rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\n\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n    messageInstance = null; // delete messageInstance for new getContainer\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n\n    hasTransitionName = true;\n  }\n\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\n\nfunction getRCNotificationInstance(args, callback) {\n  var customizePrefixCls = args.prefixCls,\n      getContextPopupContainer = args.getPopupContainer;\n\n  var _globalConfig = globalConfig(),\n      getPrefixCls = _globalConfig.getPrefixCls,\n      getRootPrefixCls = _globalConfig.getRootPrefixCls,\n      getIconPrefixCls = _globalConfig.getIconPrefixCls;\n\n  var prefixCls = getPrefixCls('message', customizePrefixCls || localPrefixCls);\n  var rootPrefixCls = getRootPrefixCls(args.rootPrefixCls, prefixCls);\n  var iconPrefixCls = getIconPrefixCls();\n\n  if (messageInstance) {\n    callback({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls,\n      iconPrefixCls: iconPrefixCls,\n      instance: messageInstance\n    });\n    return;\n  }\n\n  var instanceConfig = {\n    prefixCls: prefixCls,\n    transitionName: hasTransitionName ? transitionName : \"\".concat(rootPrefixCls, \"-\").concat(transitionName),\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer || getContextPopupContainer,\n    maxCount: maxCount\n  };\n  RCNotification.newInstance(instanceConfig, function (instance) {\n    if (messageInstance) {\n      callback({\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        instance: messageInstance\n      });\n      return;\n    }\n\n    messageInstance = instance;\n\n    if (process.env.NODE_ENV === 'test') {\n      messageInstance.config = instanceConfig;\n    }\n\n    callback({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls,\n      iconPrefixCls: iconPrefixCls,\n      instance: instance\n    });\n  });\n}\n\nvar typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\nexport var typeList = Object.keys(typeToIcon);\n\nfunction getRCNoticeProps(args, prefixCls, iconPrefixCls) {\n  var _classNames;\n\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = typeToIcon[args.type];\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\n  return {\n    key: args.key,\n    duration: duration,\n    style: args.style || {},\n    className: args.className,\n    content: /*#__PURE__*/React.createElement(ConfigProvider, {\n      iconPrefixCls: iconPrefixCls\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: messageClass\n    }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content))),\n    onClose: args.onClose,\n    onClick: args.onClick\n  };\n}\n\nfunction notice(args) {\n  var target = args.key || getKeyThenIncreaseKey();\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getRCNotificationInstance(args, function (_ref) {\n      var prefixCls = _ref.prefixCls,\n          iconPrefixCls = _ref.iconPrefixCls,\n          instance = _ref.instance;\n      instance.notice(getRCNoticeProps(_extends(_extends({}, args), {\n        key: target,\n        onClose: callback\n      }), prefixCls, iconPrefixCls));\n    });\n  });\n\n  var result = function result() {\n    var _a;\n\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n      (_a = args.onClose) === null || _a === void 0 ? void 0 : _a.call(args);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy: function destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        var _messageInstance = messageInstance,\n            removeNotice = _messageInstance.removeNotice;\n        removeNotice(messageKey);\n      } else {\n        var _messageInstance2 = messageInstance,\n            destroy = _messageInstance2.destroy;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return originalApi.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n}\ntypeList.forEach(function (type) {\n  return attachTypeApi(api, type);\n});\napi.warn = api.warning;\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\n/** @internal test Only function. Not work on production */\n\nexport var getInstance = function getInstance() {\n  return process.env.NODE_ENV === 'test' ? messageInstance : null;\n};\nexport default api;","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/antd/es/message/index.js"],"names":["_extends","_defineProperty","CheckCircleFilled","CloseCircleFilled","ExclamationCircleFilled","InfoCircleFilled","LoadingOutlined","classNames","RCNotification","React","ConfigProvider","globalConfig","createUseMessage","messageInstance","defaultDuration","defaultTop","key","localPrefixCls","transitionName","hasTransitionName","getContainer","maxCount","rtl","getKeyThenIncreaseKey","setMessageConfig","options","top","undefined","duration","prefixCls","getRCNotificationInstance","args","callback","customizePrefixCls","getContextPopupContainer","getPopupContainer","_globalConfig","getPrefixCls","getRootPrefixCls","getIconPrefixCls","rootPrefixCls","iconPrefixCls","instance","instanceConfig","concat","style","newInstance","process","env","NODE_ENV","config","typeToIcon","info","success","error","warning","loading","typeList","Object","keys","getRCNoticeProps","_classNames","IconComponent","type","messageClass","className","content","createElement","icon","onClose","onClick","notice","target","closePromise","Promise","resolve","_ref","result","_a","removeNotice","call","then","filled","rejected","promise","isArgsProps","prototype","toString","api","open","destroy","messageKey","_messageInstance","_messageInstance2","attachTypeApi","originalApi","forEach","warn","useMessage","getInstance"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport RCNotification from 'rc-notification';\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig } from '../config-provider';\nimport createUseMessage from './hooks/useMessage';\nvar messageInstance;\nvar defaultDuration = 3;\nvar defaultTop;\nvar key = 1;\nvar localPrefixCls = '';\nvar transitionName = 'move-up';\nvar hasTransitionName = false;\nvar getContainer;\nvar maxCount;\nvar rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n    messageInstance = null; // delete messageInstance for new getContainer\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n    hasTransitionName = true;\n  }\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\nfunction getRCNotificationInstance(args, callback) {\n  var customizePrefixCls = args.prefixCls,\n    getContextPopupContainer = args.getPopupContainer;\n  var _globalConfig = globalConfig(),\n    getPrefixCls = _globalConfig.getPrefixCls,\n    getRootPrefixCls = _globalConfig.getRootPrefixCls,\n    getIconPrefixCls = _globalConfig.getIconPrefixCls;\n  var prefixCls = getPrefixCls('message', customizePrefixCls || localPrefixCls);\n  var rootPrefixCls = getRootPrefixCls(args.rootPrefixCls, prefixCls);\n  var iconPrefixCls = getIconPrefixCls();\n  if (messageInstance) {\n    callback({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls,\n      iconPrefixCls: iconPrefixCls,\n      instance: messageInstance\n    });\n    return;\n  }\n  var instanceConfig = {\n    prefixCls: prefixCls,\n    transitionName: hasTransitionName ? transitionName : \"\".concat(rootPrefixCls, \"-\").concat(transitionName),\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer || getContextPopupContainer,\n    maxCount: maxCount\n  };\n  RCNotification.newInstance(instanceConfig, function (instance) {\n    if (messageInstance) {\n      callback({\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        instance: messageInstance\n      });\n      return;\n    }\n    messageInstance = instance;\n    if (process.env.NODE_ENV === 'test') {\n      messageInstance.config = instanceConfig;\n    }\n    callback({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls,\n      iconPrefixCls: iconPrefixCls,\n      instance: instance\n    });\n  });\n}\nvar typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\nexport var typeList = Object.keys(typeToIcon);\nfunction getRCNoticeProps(args, prefixCls, iconPrefixCls) {\n  var _classNames;\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = typeToIcon[args.type];\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\n  return {\n    key: args.key,\n    duration: duration,\n    style: args.style || {},\n    className: args.className,\n    content: /*#__PURE__*/React.createElement(ConfigProvider, {\n      iconPrefixCls: iconPrefixCls\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: messageClass\n    }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content))),\n    onClose: args.onClose,\n    onClick: args.onClick\n  };\n}\nfunction notice(args) {\n  var target = args.key || getKeyThenIncreaseKey();\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n      return resolve(true);\n    };\n    getRCNotificationInstance(args, function (_ref) {\n      var prefixCls = _ref.prefixCls,\n        iconPrefixCls = _ref.iconPrefixCls,\n        instance = _ref.instance;\n      instance.notice(getRCNoticeProps(_extends(_extends({}, args), {\n        key: target,\n        onClose: callback\n      }), prefixCls, iconPrefixCls));\n    });\n  });\n  var result = function result() {\n    var _a;\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n      (_a = args.onClose) === null || _a === void 0 ? void 0 : _a.call(args);\n    }\n  };\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n  result.promise = closePromise;\n  return result;\n}\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\nvar api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy: function destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        var _messageInstance = messageInstance,\n          removeNotice = _messageInstance.removeNotice;\n        removeNotice(messageKey);\n      } else {\n        var _messageInstance2 = messageInstance,\n          destroy = _messageInstance2.destroy;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n    return originalApi.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n}\ntypeList.forEach(function (type) {\n  return attachTypeApi(api, type);\n});\napi.warn = api.warning;\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\n/** @internal test Only function. Not work on production */\nexport var getInstance = function getInstance() {\n  return process.env.NODE_ENV === 'test' ? messageInstance : null;\n};\nexport default api;"]},"metadata":{},"sourceType":"module"}