{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? warning(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n\n      return selection;\n    }).map(function (selection) {\n      return _extends(_extends({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n\n          var _a;\n\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? warning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = _toConsumableArray(columns);\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n                text = selection.text,\n                onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? warning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = _toArray(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? warning(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/antd/es/table/hooks/useSelection.js"],"names":["_defineProperty","_toArray","_extends","_slicedToArray","_toConsumableArray","_typeof","DownOutlined","INTERNAL_COL_DEFINE","arrAdd","arrDel","conductCheck","convertDataToEntities","useMergedState","React","useCallback","useMemo","useState","Checkbox","Dropdown","Radio","warning","SELECTION_COLUMN","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","EMPTY_LIST","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","fixed","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","getPopupContainer","_useMergedState","value","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","keys","newCache","key","current","has","get","set","useEffect","_useMemo","keyEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","method","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","_a2","_len","arguments","length","rest","_key","call","apply","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","items","onSelectionClick","onClick","label","createElement","className","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","findIndex","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","columnTitle","render"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning';\n// TODO: warning if use ajax!!!\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n    preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n    selectedRowKeys = _ref.selectedRowKeys,\n    defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n    getCheckboxProps = _ref.getCheckboxProps,\n    onSelectionChange = _ref.onChange,\n    onSelect = _ref.onSelect,\n    onSelectAll = _ref.onSelectAll,\n    onSelectInvert = _ref.onSelectInvert,\n    onSelectNone = _ref.onSelectNone,\n    onSelectMultiple = _ref.onSelectMultiple,\n    selectionColWidth = _ref.columnWidth,\n    selectionType = _ref.type,\n    selections = _ref.selections,\n    fixed = _ref.fixed,\n    customizeRenderCell = _ref.renderCell,\n    hideSelectAll = _ref.hideSelectAll,\n    _ref$checkStrictly = _ref.checkStrictly,\n    checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n  var prefixCls = config.prefixCls,\n    data = config.data,\n    pageData = config.pageData,\n    getRecordByKey = config.getRecordByKey,\n    getRowKey = config.getRowKey,\n    expandType = config.expandType,\n    childrenColumnName = config.childrenColumnName,\n    tableLocale = config.locale,\n    getPopupContainer = config.getPopupContainer;\n  // ========================= Keys =========================\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n      value: selectedRowKeys\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1];\n  // ======================== Caches ========================\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]);\n  // Update cache with selectedKeys\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  var _useMemo = useMemo(function () {\n      return checkStrictly ? {\n        keyEntities: null\n      } : convertDataToEntities(data, {\n        externalGetKey: getRowKey,\n        childrenPropName: childrenColumnName\n      });\n    }, [data, getRowKey, checkStrictly, childrenColumnName]),\n    keyEntities = _useMemo.keyEntities;\n  // Get flatten data\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]);\n  // Get all checkbox props\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? warning(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  var _useMemo2 = useMemo(function () {\n      if (checkStrictly) {\n        return [mergedSelectedKeys || [], []];\n      }\n      var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n      return [checkedKeys || [], halfCheckedKeys];\n    }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n    _useMemo3 = _slicedToArray(_useMemo2, 2),\n    derivedSelectedKeys = _useMemo3[0],\n    derivedHalfSelectedKeys = _useMemo3[1];\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]);\n  // Save last selected key to enable range selection\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1];\n  // Reset if rowSelection reset\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]);\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n      return selection;\n    }).map(function (selection) {\n      return _extends(_extends({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n          var _a;\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]);\n  // ======================= Columns ========================\n  var transformColumns = useCallback(function (columns) {\n    var _a;\n    // >>>>>>>>>>> Skip if not exists `rowSelection`\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? warning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    }\n    // >>>>>>>>>>> Support selection\n    var cloneColumns = _toConsumableArray(columns);\n    var keySet = new Set(derivedSelectedKeySet);\n    // Record key only need check with enabled\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections) {\n        var menu = {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      }), customizeSelections);\n    }\n    // Body Cell\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? warning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        }\n        // Record checked\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1;\n              // Get range of this\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n          _cloneColumns2 = _toArray(_cloneColumns),\n          expandColumn = _cloneColumns2[0],\n          restColumns = _cloneColumns2.slice(1);\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? warning(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    });\n    // Fixed column logic\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    // Replace with real selection column\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"module"}