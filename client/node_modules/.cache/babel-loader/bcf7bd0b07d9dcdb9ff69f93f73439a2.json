{"ast":null,"code":"import { setTime as utilSetTime } from '../utils/timeUtil';\nexport default function useTimeSelection(_ref) {\n  var value = _ref.value,\n      generateConfig = _ref.generateConfig,\n      disabledMinutes = _ref.disabledMinutes,\n      disabledSeconds = _ref.disabledSeconds,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds,\n      use12Hours = _ref.use12Hours;\n\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    var newDisabledMinutes = disabledMinutes && disabledMinutes(mergedHour);\n\n    if (newDisabledMinutes === null || newDisabledMinutes === void 0 ? void 0 : newDisabledMinutes.includes(mergedMinute)) {\n      // find the first available minute in minutes\n      var availableMinute = minutes.find(function (i) {\n        return !newDisabledMinutes.includes(i.value);\n      });\n\n      if (availableMinute) {\n        mergedMinute = availableMinute.value;\n      } else {\n        return null;\n      }\n    }\n\n    var newDisabledSeconds = disabledSeconds && disabledSeconds(mergedHour, mergedMinute);\n\n    if (newDisabledSeconds === null || newDisabledSeconds === void 0 ? void 0 : newDisabledSeconds.includes(mergedSecond)) {\n      // find the first available second in seconds\n      var availableSecond = seconds.find(function (i) {\n        return !newDisabledSeconds.includes(i.value);\n      });\n\n      if (availableSecond) {\n        mergedSecond = availableSecond.value;\n      } else {\n        return null;\n      }\n    }\n\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  };\n\n  return setTime;\n}","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-picker/es/hooks/useTimeSelection.js"],"names":["setTime","utilSetTime","useTimeSelection","_ref","value","generateConfig","disabledMinutes","disabledSeconds","minutes","seconds","use12Hours","isNewPM","newHour","newMinute","newSecond","newDate","getNow","mergedHour","Math","max","mergedMinute","mergedSecond","newDisabledMinutes","includes","availableMinute","find","i","newDisabledSeconds","availableSecond"],"mappings":"AAAA,SAASA,OAAO,IAAIC,WAApB,QAAuC,mBAAvC;AACA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC7C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACEC,cAAc,GAAGF,IAAI,CAACE,cADxB;AAAA,MAEEC,eAAe,GAAGH,IAAI,CAACG,eAFzB;AAAA,MAGEC,eAAe,GAAGJ,IAAI,CAACI,eAHzB;AAAA,MAIEC,OAAO,GAAGL,IAAI,CAACK,OAJjB;AAAA,MAKEC,OAAO,GAAGN,IAAI,CAACM,OALjB;AAAA,MAMEC,UAAU,GAAGP,IAAI,CAACO,UANpB;;AAOA,MAAIV,OAAO,GAAG,SAASA,OAAT,CAAiBW,OAAjB,EAA0BC,OAA1B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;AACrE,QAAIC,OAAO,GAAGX,KAAK,IAAIC,cAAc,CAACW,MAAf,EAAvB;AACA,QAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYP,OAAZ,CAAjB;AACA,QAAIQ,YAAY,GAAGF,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYN,SAAZ,CAAnB;AACA,QAAIQ,YAAY,GAAGH,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,SAAZ,CAAnB;AACA,QAAIQ,kBAAkB,GAAGhB,eAAe,IAAIA,eAAe,CAACW,UAAD,CAA3D;;AACA,QAAIK,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACC,QAAnB,CAA4BH,YAA5B,CAA5E,EAAuH;AACrH;AACA,UAAII,eAAe,GAAGhB,OAAO,CAACiB,IAAR,CAAa,UAAUC,CAAV,EAAa;AAC9C,eAAO,CAACJ,kBAAkB,CAACC,QAAnB,CAA4BG,CAAC,CAACtB,KAA9B,CAAR;AACD,OAFqB,CAAtB;;AAGA,UAAIoB,eAAJ,EAAqB;AACnBJ,QAAAA,YAAY,GAAGI,eAAe,CAACpB,KAA/B;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;;AACD,QAAIuB,kBAAkB,GAAGpB,eAAe,IAAIA,eAAe,CAACU,UAAD,EAAaG,YAAb,CAA3D;;AACA,QAAIO,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACJ,QAAnB,CAA4BF,YAA5B,CAA5E,EAAuH;AACrH;AACA,UAAIO,eAAe,GAAGnB,OAAO,CAACgB,IAAR,CAAa,UAAUC,CAAV,EAAa;AAC9C,eAAO,CAACC,kBAAkB,CAACJ,QAAnB,CAA4BG,CAAC,CAACtB,KAA9B,CAAR;AACD,OAFqB,CAAtB;;AAGA,UAAIwB,eAAJ,EAAqB;AACnBP,QAAAA,YAAY,GAAGO,eAAe,CAACxB,KAA/B;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;;AACDW,IAAAA,OAAO,GAAGd,WAAW,CAACI,cAAD,EAAiBU,OAAjB,EAA0B,CAACL,UAAD,IAAe,CAACC,OAAhB,GAA0BM,UAA1B,GAAuCA,UAAU,GAAG,EAA9E,EAAkFG,YAAlF,EAAgGC,YAAhG,CAArB;AACA,WAAON,OAAP;AACD,GA/BD;;AAgCA,SAAOf,OAAP;AACD","sourcesContent":["import { setTime as utilSetTime } from '../utils/timeUtil';\nexport default function useTimeSelection(_ref) {\n  var value = _ref.value,\n    generateConfig = _ref.generateConfig,\n    disabledMinutes = _ref.disabledMinutes,\n    disabledSeconds = _ref.disabledSeconds,\n    minutes = _ref.minutes,\n    seconds = _ref.seconds,\n    use12Hours = _ref.use12Hours;\n  var setTime = function setTime(isNewPM, newHour, newMinute, newSecond) {\n    var newDate = value || generateConfig.getNow();\n    var mergedHour = Math.max(0, newHour);\n    var mergedMinute = Math.max(0, newMinute);\n    var mergedSecond = Math.max(0, newSecond);\n    var newDisabledMinutes = disabledMinutes && disabledMinutes(mergedHour);\n    if (newDisabledMinutes === null || newDisabledMinutes === void 0 ? void 0 : newDisabledMinutes.includes(mergedMinute)) {\n      // find the first available minute in minutes\n      var availableMinute = minutes.find(function (i) {\n        return !newDisabledMinutes.includes(i.value);\n      });\n      if (availableMinute) {\n        mergedMinute = availableMinute.value;\n      } else {\n        return null;\n      }\n    }\n    var newDisabledSeconds = disabledSeconds && disabledSeconds(mergedHour, mergedMinute);\n    if (newDisabledSeconds === null || newDisabledSeconds === void 0 ? void 0 : newDisabledSeconds.includes(mergedSecond)) {\n      // find the first available second in seconds\n      var availableSecond = seconds.find(function (i) {\n        return !newDisabledSeconds.includes(i.value);\n      });\n      if (availableSecond) {\n        mergedSecond = availableSecond.value;\n      } else {\n        return null;\n      }\n    }\n    newDate = utilSetTime(generateConfig, newDate, !use12Hours || !isNewPM ? mergedHour : mergedHour + 12, mergedMinute, mergedSecond);\n    return newDate;\n  };\n  return setTime;\n}"]},"metadata":{},"sourceType":"module"}