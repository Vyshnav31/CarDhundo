{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"onPressEnter\", \"defaultValue\", \"value\", \"autoSize\", \"onResize\", \"className\", \"style\", \"disabled\", \"onChange\", \"onInternalAutoSize\"];\nimport * as React from 'react';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport raf from \"rc-util/es/raf\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport classNames from 'classnames';\nimport calculateAutoSizeStyle from './calculateNodeHeight';\nvar RESIZE_START = 0;\nvar RESIZE_MEASURING = 1;\nvar RESIZE_STABLE = 2;\nvar ResizableTextArea = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-textarea' : _props$prefixCls,\n      onPressEnter = props.onPressEnter,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      autoSize = props.autoSize,\n      onResize = props.onResize,\n      className = props.className,\n      style = props.style,\n      disabled = props.disabled,\n      onChange = props.onChange,\n      onInternalAutoSize = props.onInternalAutoSize,\n      restProps = _objectWithoutProperties(props, _excluded); // =============================== Value ================================\n\n\n  var _useMergedState = useMergedState(defaultValue, {\n    value: value,\n    postState: function postState(val) {\n      return val !== null && val !== void 0 ? val : '';\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedValue = _useMergedState2[0],\n      setMergedValue = _useMergedState2[1];\n\n  var onInternalChange = function onInternalChange(event) {\n    setMergedValue(event.target.value);\n    onChange === null || onChange === void 0 ? void 0 : onChange(event);\n  }; // ================================ Ref =================================\n\n\n  var textareaRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      textArea: textareaRef.current\n    };\n  }); // ============================== AutoSize ==============================\n\n  var _React$useMemo = React.useMemo(function () {\n    if (autoSize && _typeof(autoSize) === 'object') {\n      return [autoSize.minRows, autoSize.maxRows];\n    }\n\n    return [];\n  }, [autoSize]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      minRows = _React$useMemo2[0],\n      maxRows = _React$useMemo2[1];\n\n  var needAutoSize = !!autoSize; // =============================== Scroll ===============================\n  // https://github.com/ant-design/ant-design/issues/21870\n\n  var fixFirefoxAutoScroll = function fixFirefoxAutoScroll() {\n    try {\n      // FF has bug with jump of scroll to top. We force back here.\n      if (document.activeElement === textareaRef.current) {\n        var _textareaRef$current = textareaRef.current,\n            selectionStart = _textareaRef$current.selectionStart,\n            selectionEnd = _textareaRef$current.selectionEnd,\n            scrollTop = _textareaRef$current.scrollTop; // Fix Safari bug which not rollback when break line\n        // This makes Chinese IME can't input. Do not fix this\n        // const { value: tmpValue } = textareaRef.current;\n        // textareaRef.current.value = '';\n        // textareaRef.current.value = tmpValue;\n\n        textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n        textareaRef.current.scrollTop = scrollTop;\n      }\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }; // =============================== Resize ===============================\n\n\n  var _React$useState = React.useState(RESIZE_STABLE),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      resizeState = _React$useState2[0],\n      setResizeState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      autoSizeStyle = _React$useState4[0],\n      setAutoSizeStyle = _React$useState4[1];\n\n  var startResize = function startResize() {\n    setResizeState(RESIZE_START);\n\n    if (process.env.NODE_ENV === 'test') {\n      onInternalAutoSize === null || onInternalAutoSize === void 0 ? void 0 : onInternalAutoSize();\n    }\n  }; // Change to trigger resize measure\n\n\n  useLayoutEffect(function () {\n    if (needAutoSize) {\n      startResize();\n    }\n  }, [value, minRows, maxRows, needAutoSize]);\n  useLayoutEffect(function () {\n    if (resizeState === RESIZE_START) {\n      setResizeState(RESIZE_MEASURING);\n    } else if (resizeState === RESIZE_MEASURING) {\n      var textareaStyles = calculateAutoSizeStyle(textareaRef.current, false, minRows, maxRows); // Safari has bug that text will keep break line on text cut when it's prev is break line.\n      // ZombieJ: This not often happen. So we just skip it.\n      // const { selectionStart, selectionEnd, scrollTop } = textareaRef.current;\n      // const { value: tmpValue } = textareaRef.current;\n      // textareaRef.current.value = '';\n      // textareaRef.current.value = tmpValue;\n      // if (document.activeElement === textareaRef.current) {\n      //   textareaRef.current.scrollTop = scrollTop;\n      //   textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n      // }\n\n      setResizeState(RESIZE_STABLE);\n      setAutoSizeStyle(textareaStyles);\n    } else {\n      fixFirefoxAutoScroll();\n    }\n  }, [resizeState]); // We lock resize trigger by raf to avoid Safari warning\n\n  var resizeRafRef = React.useRef();\n\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(resizeRafRef.current);\n  };\n\n  var onInternalResize = function onInternalResize(size) {\n    if (resizeState === RESIZE_STABLE) {\n      onResize === null || onResize === void 0 ? void 0 : onResize(size);\n\n      if (autoSize) {\n        cleanRaf();\n        resizeRafRef.current = raf(function () {\n          startResize();\n        });\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    return cleanRaf;\n  }, []); // =============================== Render ===============================\n\n  var mergedAutoSizeStyle = needAutoSize ? autoSizeStyle : null;\n\n  var mergedStyle = _objectSpread(_objectSpread({}, style), mergedAutoSizeStyle);\n\n  if (resizeState === RESIZE_START || resizeState === RESIZE_MEASURING) {\n    mergedStyle.overflowY = 'hidden';\n    mergedStyle.overflowX = 'hidden';\n  }\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onInternalResize,\n    disabled: !(autoSize || onResize)\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n    ref: textareaRef,\n    style: mergedStyle,\n    className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)),\n    disabled: disabled,\n    value: mergedValue,\n    onChange: onInternalChange\n  })));\n});\nexport default ResizableTextArea;","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-textarea/es/ResizableTextArea.js"],"names":["_extends","_defineProperty","_objectSpread","_typeof","_slicedToArray","_objectWithoutProperties","_excluded","React","ResizeObserver","useLayoutEffect","raf","useMergedState","classNames","calculateAutoSizeStyle","RESIZE_START","RESIZE_MEASURING","RESIZE_STABLE","ResizableTextArea","forwardRef","props","ref","_props$prefixCls","prefixCls","onPressEnter","defaultValue","value","autoSize","onResize","className","style","disabled","onChange","onInternalAutoSize","restProps","_useMergedState","postState","val","_useMergedState2","mergedValue","setMergedValue","onInternalChange","event","target","textareaRef","useRef","useImperativeHandle","textArea","current","_React$useMemo","useMemo","minRows","maxRows","_React$useMemo2","needAutoSize","fixFirefoxAutoScroll","document","activeElement","_textareaRef$current","selectionStart","selectionEnd","scrollTop","setSelectionRange","e","_React$useState","useState","_React$useState2","resizeState","setResizeState","_React$useState3","_React$useState4","autoSizeStyle","setAutoSizeStyle","startResize","process","env","NODE_ENV","textareaStyles","resizeRafRef","cleanRaf","cancel","onInternalResize","size","useEffect","mergedAutoSizeStyle","mergedStyle","overflowY","overflowX","createElement","concat"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"onPressEnter\", \"defaultValue\", \"value\", \"autoSize\", \"onResize\", \"className\", \"style\", \"disabled\", \"onChange\", \"onInternalAutoSize\"];\nimport * as React from 'react';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport raf from \"rc-util/es/raf\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport classNames from 'classnames';\nimport calculateAutoSizeStyle from './calculateNodeHeight';\nvar RESIZE_START = 0;\nvar RESIZE_MEASURING = 1;\nvar RESIZE_STABLE = 2;\nvar ResizableTextArea = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-textarea' : _props$prefixCls,\n    onPressEnter = props.onPressEnter,\n    defaultValue = props.defaultValue,\n    value = props.value,\n    autoSize = props.autoSize,\n    onResize = props.onResize,\n    className = props.className,\n    style = props.style,\n    disabled = props.disabled,\n    onChange = props.onChange,\n    onInternalAutoSize = props.onInternalAutoSize,\n    restProps = _objectWithoutProperties(props, _excluded);\n  // =============================== Value ================================\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: function postState(val) {\n        return val !== null && val !== void 0 ? val : '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedValue = _useMergedState2[0],\n    setMergedValue = _useMergedState2[1];\n  var onInternalChange = function onInternalChange(event) {\n    setMergedValue(event.target.value);\n    onChange === null || onChange === void 0 ? void 0 : onChange(event);\n  };\n  // ================================ Ref =================================\n  var textareaRef = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return {\n      textArea: textareaRef.current\n    };\n  });\n  // ============================== AutoSize ==============================\n  var _React$useMemo = React.useMemo(function () {\n      if (autoSize && _typeof(autoSize) === 'object') {\n        return [autoSize.minRows, autoSize.maxRows];\n      }\n      return [];\n    }, [autoSize]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    minRows = _React$useMemo2[0],\n    maxRows = _React$useMemo2[1];\n  var needAutoSize = !!autoSize;\n  // =============================== Scroll ===============================\n  // https://github.com/ant-design/ant-design/issues/21870\n  var fixFirefoxAutoScroll = function fixFirefoxAutoScroll() {\n    try {\n      // FF has bug with jump of scroll to top. We force back here.\n      if (document.activeElement === textareaRef.current) {\n        var _textareaRef$current = textareaRef.current,\n          selectionStart = _textareaRef$current.selectionStart,\n          selectionEnd = _textareaRef$current.selectionEnd,\n          scrollTop = _textareaRef$current.scrollTop;\n        // Fix Safari bug which not rollback when break line\n        // This makes Chinese IME can't input. Do not fix this\n        // const { value: tmpValue } = textareaRef.current;\n        // textareaRef.current.value = '';\n        // textareaRef.current.value = tmpValue;\n        textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n        textareaRef.current.scrollTop = scrollTop;\n      }\n    } catch (e) {\n      // Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  };\n  // =============================== Resize ===============================\n  var _React$useState = React.useState(RESIZE_STABLE),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    resizeState = _React$useState2[0],\n    setResizeState = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    autoSizeStyle = _React$useState4[0],\n    setAutoSizeStyle = _React$useState4[1];\n  var startResize = function startResize() {\n    setResizeState(RESIZE_START);\n    if (process.env.NODE_ENV === 'test') {\n      onInternalAutoSize === null || onInternalAutoSize === void 0 ? void 0 : onInternalAutoSize();\n    }\n  };\n  // Change to trigger resize measure\n  useLayoutEffect(function () {\n    if (needAutoSize) {\n      startResize();\n    }\n  }, [value, minRows, maxRows, needAutoSize]);\n  useLayoutEffect(function () {\n    if (resizeState === RESIZE_START) {\n      setResizeState(RESIZE_MEASURING);\n    } else if (resizeState === RESIZE_MEASURING) {\n      var textareaStyles = calculateAutoSizeStyle(textareaRef.current, false, minRows, maxRows);\n      // Safari has bug that text will keep break line on text cut when it's prev is break line.\n      // ZombieJ: This not often happen. So we just skip it.\n      // const { selectionStart, selectionEnd, scrollTop } = textareaRef.current;\n      // const { value: tmpValue } = textareaRef.current;\n      // textareaRef.current.value = '';\n      // textareaRef.current.value = tmpValue;\n      // if (document.activeElement === textareaRef.current) {\n      //   textareaRef.current.scrollTop = scrollTop;\n      //   textareaRef.current.setSelectionRange(selectionStart, selectionEnd);\n      // }\n      setResizeState(RESIZE_STABLE);\n      setAutoSizeStyle(textareaStyles);\n    } else {\n      fixFirefoxAutoScroll();\n    }\n  }, [resizeState]);\n  // We lock resize trigger by raf to avoid Safari warning\n  var resizeRafRef = React.useRef();\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(resizeRafRef.current);\n  };\n  var onInternalResize = function onInternalResize(size) {\n    if (resizeState === RESIZE_STABLE) {\n      onResize === null || onResize === void 0 ? void 0 : onResize(size);\n      if (autoSize) {\n        cleanRaf();\n        resizeRafRef.current = raf(function () {\n          startResize();\n        });\n      }\n    }\n  };\n  React.useEffect(function () {\n    return cleanRaf;\n  }, []);\n  // =============================== Render ===============================\n  var mergedAutoSizeStyle = needAutoSize ? autoSizeStyle : null;\n  var mergedStyle = _objectSpread(_objectSpread({}, style), mergedAutoSizeStyle);\n  if (resizeState === RESIZE_START || resizeState === RESIZE_MEASURING) {\n    mergedStyle.overflowY = 'hidden';\n    mergedStyle.overflowX = 'hidden';\n  }\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onInternalResize,\n    disabled: !(autoSize || onResize)\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n    ref: textareaRef,\n    style: mergedStyle,\n    className: classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)),\n    disabled: disabled,\n    value: mergedValue,\n    onChange: onInternalChange\n  })));\n});\nexport default ResizableTextArea;"]},"metadata":{},"sourceType":"module"}