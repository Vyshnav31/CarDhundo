{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\"; // Firefox has low performance of map.\n\nvar CacheMap = /*#__PURE__*/function () {\n  function CacheMap() {\n    _classCallCheck(this, CacheMap);\n\n    this.maps = void 0; // Used for cache key\n    // `useMemo` no need to update if `id` not change\n\n    this.id = 0;\n    this.maps = Object.create(null);\n  }\n\n  _createClass(CacheMap, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this.maps[key] = value;\n      this.id += 1;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.maps[key];\n    }\n  }]);\n\n  return CacheMap;\n}();\n\nexport default CacheMap;","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-virtual-list/es/utils/CacheMap.js"],"names":["_classCallCheck","_createClass","CacheMap","maps","id","Object","create","key","value","set","get"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB,C,CACA;;AACA,IAAIC,QAAQ,GAAG,aAAa,YAAY;AACtC,WAASA,QAAT,GAAoB;AAClBF,IAAAA,eAAe,CAAC,IAAD,EAAOE,QAAP,CAAf;;AACA,SAAKC,IAAL,GAAY,KAAK,CAAjB,CAFkB,CAGlB;AACA;;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKD,IAAL,GAAYE,MAAM,CAACC,MAAP,CAAc,IAAd,CAAZ;AACD;;AACDL,EAAAA,YAAY,CAACC,QAAD,EAAW,CAAC;AACtBK,IAAAA,GAAG,EAAE,KADiB;AAEtBC,IAAAA,KAAK,EAAE,SAASC,GAAT,CAAaF,GAAb,EAAkBC,KAAlB,EAAyB;AAC9B,WAAKL,IAAL,CAAUI,GAAV,IAAiBC,KAAjB;AACA,WAAKJ,EAAL,IAAW,CAAX;AACD;AALqB,GAAD,EAMpB;AACDG,IAAAA,GAAG,EAAE,KADJ;AAEDC,IAAAA,KAAK,EAAE,SAASE,GAAT,CAAaH,GAAb,EAAkB;AACvB,aAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAP;AACD;AAJA,GANoB,CAAX,CAAZ;;AAYA,SAAOL,QAAP;AACD,CAtB2B,EAA5B;;AAuBA,eAAeA,QAAf","sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n// Firefox has low performance of map.\nvar CacheMap = /*#__PURE__*/function () {\n  function CacheMap() {\n    _classCallCheck(this, CacheMap);\n    this.maps = void 0;\n    // Used for cache key\n    // `useMemo` no need to update if `id` not change\n    this.id = 0;\n    this.maps = Object.create(null);\n  }\n  _createClass(CacheMap, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this.maps[key] = value;\n      this.id += 1;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.maps[key];\n    }\n  }]);\n  return CacheMap;\n}();\nexport default CacheMap;"]},"metadata":{},"sourceType":"module"}