{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useState from \"rc-util/es/hooks/useState\";\nimport * as React from 'react';\nimport { STEP_ACTIVATED, STEP_ACTIVE, STEP_NONE, STEP_PREPARE, STEP_PREPARED, STEP_START } from \"../interface\";\nimport useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\";\nimport useNextFrame from \"./useNextFrame\";\nvar FULL_STEP_QUEUE = [STEP_PREPARE, STEP_START, STEP_ACTIVE, STEP_ACTIVATED];\nvar SIMPLE_STEP_QUEUE = [STEP_PREPARE, STEP_PREPARED];\n/** Skip current step */\n\nexport var SkipStep = false;\n/** Current step should be update in */\n\nexport var DoStep = true;\nexport function isActive(step) {\n  return step === STEP_ACTIVE || step === STEP_ACTIVATED;\n}\nexport default (function (status, prepareOnly, callback) {\n  var _useState = useState(STEP_NONE),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useNextFrame = useNextFrame(),\n      _useNextFrame2 = _slicedToArray(_useNextFrame, 2),\n      nextFrame = _useNextFrame2[0],\n      cancelNextFrame = _useNextFrame2[1];\n\n  function startQueue() {\n    setStep(STEP_PREPARE, true);\n  }\n\n  var STEP_QUEUE = prepareOnly ? SIMPLE_STEP_QUEUE : FULL_STEP_QUEUE;\n  useIsomorphicLayoutEffect(function () {\n    if (step !== STEP_NONE && step !== STEP_ACTIVATED) {\n      var index = STEP_QUEUE.indexOf(step);\n      var nextStep = STEP_QUEUE[index + 1];\n      var result = callback(step);\n\n      if (result === SkipStep) {\n        // Skip when no needed\n        setStep(nextStep, true);\n      } else if (nextStep) {\n        // Do as frame for step update\n        nextFrame(function (info) {\n          function doNext() {\n            // Skip since current queue is ood\n            if (info.isCanceled()) return;\n            setStep(nextStep, true);\n          }\n\n          if (result === true) {\n            doNext();\n          } else {\n            // Only promise should be async\n            Promise.resolve(result).then(doNext);\n          }\n        });\n      }\n    }\n  }, [status, step]);\n  React.useEffect(function () {\n    return function () {\n      cancelNextFrame();\n    };\n  }, []);\n  return [startQueue, step];\n});","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/rc-motion/es/hooks/useStepQueue.js"],"names":["_slicedToArray","useState","React","STEP_ACTIVATED","STEP_ACTIVE","STEP_NONE","STEP_PREPARE","STEP_PREPARED","STEP_START","useIsomorphicLayoutEffect","useNextFrame","FULL_STEP_QUEUE","SIMPLE_STEP_QUEUE","SkipStep","DoStep","isActive","step","status","prepareOnly","callback","_useState","_useState2","setStep","_useNextFrame","_useNextFrame2","nextFrame","cancelNextFrame","startQueue","STEP_QUEUE","index","indexOf","nextStep","result","info","doNext","isCanceled","Promise","resolve","then","useEffect"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,SAAtC,EAAiDC,YAAjD,EAA+DC,aAA/D,EAA8EC,UAA9E,QAAgG,cAAhG;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,IAAIC,eAAe,GAAG,CAACL,YAAD,EAAeE,UAAf,EAA2BJ,WAA3B,EAAwCD,cAAxC,CAAtB;AACA,IAAIS,iBAAiB,GAAG,CAACN,YAAD,EAAeC,aAAf,CAAxB;AAEA;;AACA,OAAO,IAAIM,QAAQ,GAAG,KAAf;AACP;;AACA,OAAO,IAAIC,MAAM,GAAG,IAAb;AACP,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SAAOA,IAAI,KAAKZ,WAAT,IAAwBY,IAAI,KAAKb,cAAxC;AACD;AACD,gBAAgB,UAAUc,MAAV,EAAkBC,WAAlB,EAA+BC,QAA/B,EAAyC;AACvD,MAAIC,SAAS,GAAGnB,QAAQ,CAACI,SAAD,CAAxB;AAAA,MACEgB,UAAU,GAAGrB,cAAc,CAACoB,SAAD,EAAY,CAAZ,CAD7B;AAAA,MAEEJ,IAAI,GAAGK,UAAU,CAAC,CAAD,CAFnB;AAAA,MAGEC,OAAO,GAAGD,UAAU,CAAC,CAAD,CAHtB;;AAIA,MAAIE,aAAa,GAAGb,YAAY,EAAhC;AAAA,MACEc,cAAc,GAAGxB,cAAc,CAACuB,aAAD,EAAgB,CAAhB,CADjC;AAAA,MAEEE,SAAS,GAAGD,cAAc,CAAC,CAAD,CAF5B;AAAA,MAGEE,eAAe,GAAGF,cAAc,CAAC,CAAD,CAHlC;;AAIA,WAASG,UAAT,GAAsB;AACpBL,IAAAA,OAAO,CAAChB,YAAD,EAAe,IAAf,CAAP;AACD;;AACD,MAAIsB,UAAU,GAAGV,WAAW,GAAGN,iBAAH,GAAuBD,eAAnD;AACAF,EAAAA,yBAAyB,CAAC,YAAY;AACpC,QAAIO,IAAI,KAAKX,SAAT,IAAsBW,IAAI,KAAKb,cAAnC,EAAmD;AACjD,UAAI0B,KAAK,GAAGD,UAAU,CAACE,OAAX,CAAmBd,IAAnB,CAAZ;AACA,UAAIe,QAAQ,GAAGH,UAAU,CAACC,KAAK,GAAG,CAAT,CAAzB;AACA,UAAIG,MAAM,GAAGb,QAAQ,CAACH,IAAD,CAArB;;AACA,UAAIgB,MAAM,KAAKnB,QAAf,EAAyB;AACvB;AACAS,QAAAA,OAAO,CAACS,QAAD,EAAW,IAAX,CAAP;AACD,OAHD,MAGO,IAAIA,QAAJ,EAAc;AACnB;AACAN,QAAAA,SAAS,CAAC,UAAUQ,IAAV,EAAgB;AACxB,mBAASC,MAAT,GAAkB;AAChB;AACA,gBAAID,IAAI,CAACE,UAAL,EAAJ,EAAuB;AACvBb,YAAAA,OAAO,CAACS,QAAD,EAAW,IAAX,CAAP;AACD;;AACD,cAAIC,MAAM,KAAK,IAAf,EAAqB;AACnBE,YAAAA,MAAM;AACP,WAFD,MAEO;AACL;AACAE,YAAAA,OAAO,CAACC,OAAR,CAAgBL,MAAhB,EAAwBM,IAAxB,CAA6BJ,MAA7B;AACD;AACF,SAZQ,CAAT;AAaD;AACF;AACF,GAzBwB,EAyBtB,CAACjB,MAAD,EAASD,IAAT,CAzBsB,CAAzB;AA0BAd,EAAAA,KAAK,CAACqC,SAAN,CAAgB,YAAY;AAC1B,WAAO,YAAY;AACjBb,MAAAA,eAAe;AAChB,KAFD;AAGD,GAJD,EAIG,EAJH;AAKA,SAAO,CAACC,UAAD,EAAaX,IAAb,CAAP;AACD,CA7CD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useState from \"rc-util/es/hooks/useState\";\nimport * as React from 'react';\nimport { STEP_ACTIVATED, STEP_ACTIVE, STEP_NONE, STEP_PREPARE, STEP_PREPARED, STEP_START } from \"../interface\";\nimport useIsomorphicLayoutEffect from \"./useIsomorphicLayoutEffect\";\nimport useNextFrame from \"./useNextFrame\";\nvar FULL_STEP_QUEUE = [STEP_PREPARE, STEP_START, STEP_ACTIVE, STEP_ACTIVATED];\nvar SIMPLE_STEP_QUEUE = [STEP_PREPARE, STEP_PREPARED];\n\n/** Skip current step */\nexport var SkipStep = false;\n/** Current step should be update in */\nexport var DoStep = true;\nexport function isActive(step) {\n  return step === STEP_ACTIVE || step === STEP_ACTIVATED;\n}\nexport default (function (status, prepareOnly, callback) {\n  var _useState = useState(STEP_NONE),\n    _useState2 = _slicedToArray(_useState, 2),\n    step = _useState2[0],\n    setStep = _useState2[1];\n  var _useNextFrame = useNextFrame(),\n    _useNextFrame2 = _slicedToArray(_useNextFrame, 2),\n    nextFrame = _useNextFrame2[0],\n    cancelNextFrame = _useNextFrame2[1];\n  function startQueue() {\n    setStep(STEP_PREPARE, true);\n  }\n  var STEP_QUEUE = prepareOnly ? SIMPLE_STEP_QUEUE : FULL_STEP_QUEUE;\n  useIsomorphicLayoutEffect(function () {\n    if (step !== STEP_NONE && step !== STEP_ACTIVATED) {\n      var index = STEP_QUEUE.indexOf(step);\n      var nextStep = STEP_QUEUE[index + 1];\n      var result = callback(step);\n      if (result === SkipStep) {\n        // Skip when no needed\n        setStep(nextStep, true);\n      } else if (nextStep) {\n        // Do as frame for step update\n        nextFrame(function (info) {\n          function doNext() {\n            // Skip since current queue is ood\n            if (info.isCanceled()) return;\n            setStep(nextStep, true);\n          }\n          if (result === true) {\n            doNext();\n          } else {\n            // Only promise should be async\n            Promise.resolve(result).then(doNext);\n          }\n        });\n      }\n    }\n  }, [status, step]);\n  React.useEffect(function () {\n    return function () {\n      cancelNextFrame();\n    };\n  }, []);\n  return [startQueue, step];\n});"]},"metadata":{},"sourceType":"module"}