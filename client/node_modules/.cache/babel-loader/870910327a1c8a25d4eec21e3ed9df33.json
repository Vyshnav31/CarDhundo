{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nexport default function renderSwitcherIcon(prefixCls, switcherIcon, showLine, treeNodeProps) {\n  var isLeaf = treeNodeProps.isLeaf,\n      expanded = treeNodeProps.expanded,\n      loading = treeNodeProps.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n    });\n  }\n\n  var showLeafIcon;\n\n  if (showLine && _typeof(showLine) === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n\n  if (isLeaf) {\n    if (!showLine) {\n      return null;\n    }\n\n    if (typeof showLeafIcon !== 'boolean' && !!showLeafIcon) {\n      var leafIcon = typeof showLeafIcon === 'function' ? showLeafIcon(treeNodeProps) : showLeafIcon;\n      var leafCls = \"\".concat(prefixCls, \"-switcher-line-custom-icon\");\n\n      if (isValidElement(leafIcon)) {\n        return cloneElement(leafIcon, {\n          className: classNames(leafIcon.props.className || '', leafCls)\n        });\n      }\n\n      return leafIcon;\n    }\n\n    return showLeafIcon ? /*#__PURE__*/React.createElement(FileOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-switcher-leaf-line\")\n    });\n  }\n\n  var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n  var switcher = typeof switcherIcon === 'function' ? switcherIcon(treeNodeProps) : switcherIcon;\n\n  if (isValidElement(switcher)) {\n    return cloneElement(switcher, {\n      className: classNames(switcher.props.className || '', switcherCls)\n    });\n  }\n\n  if (switcher) {\n    return switcher;\n  }\n\n  if (showLine) {\n    return expanded ? /*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    }) : /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n}","map":{"version":3,"sources":["C:/Users/vyshn/OneDrive/Desktop/Mern project/CarDhundo/client/node_modules/antd/es/tree/utils/iconUtil.js"],"names":["_typeof","CaretDownFilled","FileOutlined","LoadingOutlined","MinusSquareOutlined","PlusSquareOutlined","classNames","React","cloneElement","isValidElement","renderSwitcherIcon","prefixCls","switcherIcon","showLine","treeNodeProps","isLeaf","expanded","loading","createElement","className","concat","showLeafIcon","leafIcon","leafCls","props","switcherCls","switcher"],"mappings":"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","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nexport default function renderSwitcherIcon(prefixCls, switcherIcon, showLine, treeNodeProps) {\n  var isLeaf = treeNodeProps.isLeaf,\n    expanded = treeNodeProps.expanded,\n    loading = treeNodeProps.loading;\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n    });\n  }\n  var showLeafIcon;\n  if (showLine && _typeof(showLine) === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n  if (isLeaf) {\n    if (!showLine) {\n      return null;\n    }\n    if (typeof showLeafIcon !== 'boolean' && !!showLeafIcon) {\n      var leafIcon = typeof showLeafIcon === 'function' ? showLeafIcon(treeNodeProps) : showLeafIcon;\n      var leafCls = \"\".concat(prefixCls, \"-switcher-line-custom-icon\");\n      if (isValidElement(leafIcon)) {\n        return cloneElement(leafIcon, {\n          className: classNames(leafIcon.props.className || '', leafCls)\n        });\n      }\n      return leafIcon;\n    }\n    return showLeafIcon ? /*#__PURE__*/React.createElement(FileOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-switcher-leaf-line\")\n    });\n  }\n  var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n  var switcher = typeof switcherIcon === 'function' ? switcherIcon(treeNodeProps) : switcherIcon;\n  if (isValidElement(switcher)) {\n    return cloneElement(switcher, {\n      className: classNames(switcher.props.className || '', switcherCls)\n    });\n  }\n  if (switcher) {\n    return switcher;\n  }\n  if (showLine) {\n    return expanded ? /*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    }) : /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    });\n  }\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n}"]},"metadata":{},"sourceType":"module"}